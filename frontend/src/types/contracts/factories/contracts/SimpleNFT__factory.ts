/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimpleNFT, SimpleNFTInterface } from "../../contracts/SimpleNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "baseTokenURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "PermanentURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "freezeMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "isMetadataFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200184b3803806200184b8339810160408190526200003491620001c1565b3383836000620000458382620002e1565b506001620000548282620002e1565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009181620000aa565b506008620000a08282620002e1565b50505050620003ad565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012457600080fd5b81516001600160401b0380821115620001415762000141620000fc565b604051601f8301601f19908116603f011681019082821181831017156200016c576200016c620000fc565b816040528381526020925086838588010111156200018957600080fd5b600091505b83821015620001ad57858201830151818301840152908201906200018e565b600093810190920192909252949350505050565b600080600060608486031215620001d757600080fd5b83516001600160401b0380821115620001ef57600080fd5b620001fd8783880162000112565b945060208601519150808211156200021457600080fd5b620002228783880162000112565b935060408601519150808211156200023957600080fd5b50620002488682870162000112565b9150509250925092565b600181811c908216806200026757607f821691505b6020821081036200028857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002dc57600081815260208120601f850160051c81016020861015620002b75750805b601f850160051c820191505b81811015620002d857828155600101620002c3565b5050505b505050565b81516001600160401b03811115620002fd57620002fd620000fc565b62000315816200030e845462000252565b846200028e565b602080601f8311600181146200034d5760008415620003345750858301515b600019600386901b1c1916600185901b178555620002d8565b600085815260208120601f198616915b828110156200037e578886015182559484019460019091019084016200035d565b50858210156200039d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61148e80620003bd6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b8578063a22cb4651161007c578063a22cb46514610266578063b88d4fde14610279578063c87b56dd1461028c578063e985e9c51461029f578063f2fde38b146102b2578063f468b26a146102c557600080fd5b80636352211e1461021f57806370a0823114610232578063715018a6146102455780638da5cb5b1461024d57806395d89b411461025e57600080fd5b806318160ddd116100ff57806318160ddd146101c157806323b872dd146101d357806342842e0e146101e65780634dcf6ad6146101f957806355f804b31461020c57600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a45780631249c58b146101b9575b600080fd5b61014f61014a366004610f78565b6102e8565b60405190151581526020015b60405180910390f35b61016c61033a565b60405161015b9190610fe5565b61018c610187366004610ff8565b6103cc565b6040516001600160a01b03909116815260200161015b565b6101b76101b236600461102d565b6103f5565b005b6101b7610404565b6007545b60405190815260200161015b565b6101b76101e1366004611057565b61045d565b6101b76101f4366004611057565b6104ed565b6101b7610207366004610ff8565b61050d565b6101b761021a36600461111f565b6105da565b61018c61022d366004610ff8565b61068c565b6101c5610240366004611168565b610697565b6101b76106df565b6006546001600160a01b031661018c565b61016c6106f3565b6101b7610274366004611183565b610702565b6101b76102873660046111bf565b61070d565b61016c61029a366004610ff8565b610725565b61014f6102ad36600461123b565b61078d565b6101b76102c0366004611168565b6107bb565b61014f6102d3366004610ff8565b60009081526009602052604090205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061031957506001600160e01b03198216635b5e139f60e01b145b8061033457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546103499061126e565b80601f01602080910402602001604051908101604052809291908181526020018280546103759061126e565b80156103c25780601f10610397576101008083540402835291602001916103c2565b820191906000526020600020905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b60006103d7826107f9565b506000828152600460205260409020546001600160a01b0316610334565b610400828233610832565b5050565b6000600754600161041591906112a8565b60078190559050610426338261083f565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906020015b60405180910390a150565b6001600160a01b03821661048c57604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610499838333610859565b9050836001600160a01b0316816001600160a01b0316146104e7576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610483565b50505050565b6105088383836040518060200160405280600081525061070d565b505050565b610515610952565b61051e8161068c565b5060008181526009602052604090205460ff161561057e5760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206d6574616461746120616c72656164792066726f7a656e0000006044820152606401610483565b6000818152600960205260409020805460ff19166001179055807fa109ba539900bf1b633f956d63c96fc89b814c7287f7aa50a9216d0b556572076105c282610725565b6040516105cf9190610fe5565b60405180910390a250565b6105e2610952565b60075460009081526009602052604090205460ff16156106445760405162461bcd60e51b815260206004820152601f60248201527f4c617465737420746f6b656e206d657461646174612069732066726f7a656e006044820152606401610483565b6008610650828261130f565b50600754604080516001815260208101929092527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c9101610452565b6000610334826107f9565b60006001600160a01b0382166106c3576040516322718ad960e21b815260006004820152602401610483565b506001600160a01b031660009081526003602052604090205490565b6106e7610952565b6106f1600061097f565b565b6060600180546103499061126e565b6104003383836109d1565b61071884848461045d565b6104e73385858585610a70565b6060610730826107f9565b50600061073b610b9b565b9050600081511161075b5760405180602001604052806000815250610786565b8061076584610baa565b6040516020016107769291906113cf565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6107c3610952565b6001600160a01b0381166107ed57604051631e4fbdf760e01b815260006004820152602401610483565b6107f68161097f565b50565b6000818152600260205260408120546001600160a01b03168061033457604051637e27328960e01b815260048101849052602401610483565b6105088383836001610c3d565b610400828260405180602001604052806000815250610d43565b6000828152600260205260408120546001600160a01b039081169083161561088657610886818486610d5b565b6001600160a01b038116156108c4576108a3600085600080610c3d565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156108f3576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6006546001600160a01b031633146106f15760405163118cdaa760e01b8152336004820152602401610483565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a0357604051630b61174360e31b81526001600160a01b0383166004820152602401610483565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610b9457604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610ab29088908890879087906004016113fe565b6020604051808303816000875af1925050508015610aed575060408051601f3d908101601f19168201909252610aea9181019061143b565b60015b610b56573d808015610b1b576040519150601f19603f3d011682016040523d82523d6000602084013e610b20565b606091505b508051600003610b4e57604051633250574960e11b81526001600160a01b0385166004820152602401610483565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610b9257604051633250574960e11b81526001600160a01b0385166004820152602401610483565b505b5050505050565b6060600880546103499061126e565b60606000610bb783610dbf565b600101905060008167ffffffffffffffff811115610bd757610bd7611093565b6040519080825280601f01601f191660200182016040528015610c01576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610c0b57509392505050565b8080610c5157506001600160a01b03821615155b15610d13576000610c61846107f9565b90506001600160a01b03831615801590610c8d5750826001600160a01b0316816001600160a01b031614155b8015610ca05750610c9e818461078d565b155b15610cc95760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610483565b8115610d115783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610d4d8383610e97565b610508336000858585610a70565b610d66838383610efc565b610508576001600160a01b038316610d9457604051637e27328960e01b815260048101829052602401610483565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610483565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610dfe5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610e2a576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610e4857662386f26fc10000830492506010015b6305f5e1008310610e60576305f5e100830492506008015b6127108310610e7457612710830492506004015b60648310610e86576064830492506002015b600a83106103345760010192915050565b6001600160a01b038216610ec157604051633250574960e11b815260006004820152602401610483565b6000610ecf83836000610859565b90506001600160a01b03811615610508576040516339e3563760e11b815260006004820152602401610483565b60006001600160a01b03831615801590610f5a5750826001600160a01b0316846001600160a01b03161480610f365750610f36848461078d565b80610f5a57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b0319811681146107f657600080fd5b600060208284031215610f8a57600080fd5b813561078681610f62565b60005b83811015610fb0578181015183820152602001610f98565b50506000910152565b60008151808452610fd1816020860160208601610f95565b601f01601f19169290920160200192915050565b6020815260006107866020830184610fb9565b60006020828403121561100a57600080fd5b5035919050565b80356001600160a01b038116811461102857600080fd5b919050565b6000806040838503121561104057600080fd5b61104983611011565b946020939093013593505050565b60008060006060848603121561106c57600080fd5b61107584611011565b925061108360208501611011565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156110c4576110c4611093565b604051601f8501601f19908116603f011681019082821181831017156110ec576110ec611093565b8160405280935085815286868601111561110557600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561113157600080fd5b813567ffffffffffffffff81111561114857600080fd5b8201601f8101841361115957600080fd5b610f5a848235602084016110a9565b60006020828403121561117a57600080fd5b61078682611011565b6000806040838503121561119657600080fd5b61119f83611011565b9150602083013580151581146111b457600080fd5b809150509250929050565b600080600080608085870312156111d557600080fd5b6111de85611011565b93506111ec60208601611011565b925060408501359150606085013567ffffffffffffffff81111561120f57600080fd5b8501601f8101871361122057600080fd5b61122f878235602084016110a9565b91505092959194509250565b6000806040838503121561124e57600080fd5b61125783611011565b915061126560208401611011565b90509250929050565b600181811c9082168061128257607f821691505b6020821081036112a257634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561033457634e487b7160e01b600052601160045260246000fd5b601f82111561050857600081815260208120601f850160051c810160208610156112f05750805b601f850160051c820191505b81811015610b92578281556001016112fc565b815167ffffffffffffffff81111561132957611329611093565b61133d81611337845461126e565b846112c9565b602080601f831160018114611372576000841561135a5750858301515b600019600386901b1c1916600185901b178555610b92565b600085815260208120601f198616915b828110156113a157888601518255948401946001909101908401611382565b50858210156113bf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600083516113e1818460208801610f95565b8351908301906113f5818360208801610f95565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061143190830184610fb9565b9695505050505050565b60006020828403121561144d57600080fd5b815161078681610f6256fea26469706673582212208b821cf57d52beefb19075d9a72e91dc879bc89c795e52736f7c0ef5fafc14a464736f6c63430008140033";

type SimpleNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleNFT__factory extends ContractFactory {
  constructor(...args: SimpleNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    baseTokenURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      baseTokenURI,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    baseTokenURI: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, baseTokenURI, overrides || {}) as Promise<
      SimpleNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleNFT__factory {
    return super.connect(runner) as SimpleNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleNFTInterface {
    return new Interface(_abi) as SimpleNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimpleNFT {
    return new Contract(address, _abi, runner) as unknown as SimpleNFT;
  }
}
